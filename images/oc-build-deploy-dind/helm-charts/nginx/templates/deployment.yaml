apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      annotations:
        appuio.ch/backupcommand: /bin/sh -c "/bin/busybox tar -cf - -C {{.Values.PERSISTENT_STORAGE_PATH}} ."
        backup.appuio.ch/file-extension: .{{.Values.SERVICE_NAME}}.tar
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      volumes:
        - name: {{.Values.SERVICE_NAME}}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-store
      containers:
        - name: {{.Values.SERVICE_NAME}} 
          image: {{ .Values.image.nginxRepository }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8080
              protocol : TCP
          readinessProbe:
            httpGet:
              path: /nginx_status
              port: 50000
            initialDelaySeconds: 120
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /nginx_status
              port: 50000
            initialDelaySeconds: 120
            timeoutSeconds: 3
            failureThreshold: 5
          envFrom:
            - configMapRef:
                name: lagoon-env 
          env:
            - name: LAGOON_GIT_SHA
              value: {{.Values.LAGOON_GIT_SHA}}
            - name: NGINX_FASTCGI_PASS       
              value: '127.0.0.1'
          env:
            - name: SERVICE_NAME
              value: {{.Values.SERVICE_NAME}}-svc
            - name: NGINX_FASTCGI_PASS       
              value: '127.0.0.1'
            - name: SAFE_BRANCH
              value: "{{.Values.SAFE_BRANCH}}"
            - name: SAFE_PROJECT
              value: "{{.Values.SAFE_PROJECT}}"
            - name: BRANCH
              value: "{{.Values.BRANCH}}"
            - name: PROJECT
              value: "{{.Values.PROJECT}}"
            - name: LAGOON_GIT_SHA
              value: "{{.Values.LAGOON_GIT_SHA}}"
            - name: SERVICE_ROUTER_URL
              value: ''
            - name: OPENSHIFT_PROJECT
              value: "{{.Values.OPENSHIFT_PROJECT}}"
            - name: REGISTRY
              value: "{{.Values.REGISTRY}}"
            - name: DEPLOYMENT_STRATEGY
              value: "{{.Values.DEPLOYMENT_STRATEGY}}"
            - name: SERVICE_IMAGE
              value: "{{.Values.SERVICE_IMAGE}}"
            - name: NGINX_SERVICE_IMAGE
              value: "{{.Values.NGINX_SERVICE_IMAGE}}"
            - name: PHP_SERVICE_IMAGE
              value: "{{.Values.PHP_SERVICE_IMAGE}}"
            - name: NGINX_SERVICE_NAME
              value: "{{.Values.NGINX_SERVICE_NAME}}"
            - name: PHP_SERVICE_NAME
              value: "{{.Values.PHP_SERVICE_NAME}}"
            - name: CRONJOBS
              value: "{{.Values.CRONJOBS}}"
            - name: PERSISTENT_STORAGE_PATH
              value: "{{.Values.PERSISTENT_STORAGE_PATH}}"
            - name: PERSISTENT_STORAGE_CLASS
              value: "{{.Values.PERSISTENT_STORAGE_CLASS}}"
            - name: PERSISTENT_STORAGE_SIZE
              value: "{{.Values.PERSISTENT_STORAGE_SIZE}}"
            # - name: ENVIRONMENT_TYPE
            #   value: "{{.Values.ENVIRONMENT_TYPE}}"
            # - name: OPENSHIFT_NAME
            #   value: "{{.Values.OPENSHIFT_NAME}}"
            # - name: MONITORING_URLS
            #   value: "{{.Values.MONITORING_URLS}}"
            # - name: SERVICE_IMAGE
            #   value: "{{.Values.SERVICE_IMAGE}}"
          volumeMounts:
            - name: {{.Values.SERVICE_NAME}}
              mountPath: {{.Values.PERSISTENT_STORAGE_PATH}}
          resources:
{{ toYaml .Values.resources | indent 12 }}
        - name: php
          image: {{ .Values.image.phpRepository }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 9000
              protocol : TCP
          readinessProbe:
            exec:
              command:
                - /usr/sbin/check_fcgi
            initialDelaySeconds: 2
            periodSeconds: 5
          livenessProbe:
            exec:
              command:
                - /usr/sbin/check_fcgi
            initialDelaySeconds: 60
            periodSeconds: 5
          envFrom:
            - configMapRef:
                name: lagoon-env 
          env:
            - name: LAGOON_GIT_SHA
              value: {{.Values.LAGOON_GIT_SHA}}
            - name: SERVICE_NAME       
              value: {{.Values.SERVICE_NAME}}-svc
            - name: CRONJOBS
              value: {{.Values.CRONJOBS}}
          env:
            - name: SERVICE_NAME
              value: {{.Values.SERVICE_NAME}}-svc
            - name: SAFE_BRANCH
              value: "{{.Values.SAFE_BRANCH}}"
            - name: SAFE_PROJECT
              value: "{{.Values.SAFE_PROJECT}}"
            - name: BRANCH
              value: "{{.Values.BRANCH}}"
            - name: PROJECT
              value: "{{.Values.PROJECT}}"
            - name: LAGOON_GIT_SHA
              value: "{{.Values.LAGOON_GIT_SHA}}"
            - name: SERVICE_ROUTER_URL
              value: ''
            - name: OPENSHIFT_PROJECT
              value: "{{.Values.OPENSHIFT_PROJECT}}"
            - name: REGISTRY
              value: "{{.Values.REGISTRY}}"
            - name: DEPLOYMENT_STRATEGY
              value: "{{.Values.DEPLOYMENT_STRATEGY}}"
            - name: SERVICE_IMAGE
              value: "{{.Values.SERVICE_IMAGE}}"
            - name: NGINX_SERVICE_IMAGE
              value: "{{.Values.NGINX_SERVICE_IMAGE}}"
            - name: PHP_SERVICE_IMAGE
              value: "{{.Values.PHP_SERVICE_IMAGE}}"
            - name: NGINX_SERVICE_NAME
              value: "{{.Values.NGINX_SERVICE_NAME}}"
            - name: PHP_SERVICE_NAME
              value: "{{.Values.PHP_SERVICE_NAME}}"
            - name: CRONJOBS
              value: "{{.Values.CRONJOBS}}"
            - name: PERSISTENT_STORAGE_PATH
              value: "{{.Values.PERSISTENT_STORAGE_PATH}}"
            - name: PERSISTENT_STORAGE_CLASS
              value: "{{.Values.PERSISTENT_STORAGE_CLASS}}"
            - name: PERSISTENT_STORAGE_SIZE
              value: "{{.Values.PERSISTENT_STORAGE_SIZE}}"
            # - name: ENVIRONMENT_TYPE
            #   value: "{{.Values.ENVIRONMENT_TYPE}}"
            # - name: OPENSHIFT_NAME
            #   value: "{{.Values.OPENSHIFT_NAME}}"
            # - name: MONITORING_URLS
            #   value: "{{.Values.MONITORING_URLS}}"
            # - name: SERVICE_IMAGE
            #   value: "{{.Values.SERVICE_IMAGE}}"
          volumeMounts:
            - name: {{.Values.SERVICE_NAME}}
              mountPath: {{.Values.PERSISTENT_STORAGE_PATH}}
          resources:
{{ toYaml .Values.resources | indent 12 }}       
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
